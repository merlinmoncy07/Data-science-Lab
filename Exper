{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOPXeGFY91EZgbSbW4+74Xv",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/merlinmoncy07/Data-science-Lab/blob/main/Untitled5.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-bT3XTbDFQm8",
        "outputId": "3dae5605-f79c-425e-9433-2f8475e1685d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "3    22\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "import numpy as np \n",
        "arr=np.array([10,15,18,22])\n",
        "s = pd.Series(arr)\n",
        "print(s)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "import numpy as np\n",
        "arr=np.array(['a','b','c','d'])\n",
        "s=pd.Series(arr,\n",
        "index=['first','second','third','fourth'])\n",
        "print(s)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AXQ2m535GJwH",
        "outputId": "33b0847b-43f3-4a3f-bb1b-3cad81e9d43d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "first     a\n",
            "second    b\n",
            "third     c\n",
            "fourth    d\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "s = pd.Series(40, index = [0,1,2,3])\n",
        "print(s)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MaeTG9jgGfC_",
        "outputId": "4683e37f-792a-4cdf-db20-d2b36557d50f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    40\n",
            "1    40\n",
            "2    40\n",
            "3    40\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "d = {'Name' : 'Ishaan' , 'Ipl Team' : 'MI' , 'Runs' : 1996 }\n",
        "s = pd.Series(d)\n",
        "print(s)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b3GEmKOgHVEs",
        "outputId": "2accb199-ce54-485f-b6fa-dddf695988ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Name        Ishaan\n",
            "Ipl Team        MI\n",
            "Runs          1996\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "s=pd.Series([1,2,3,4,5])\n",
        "print('To Multiply all values in a series by 2')\n",
        "print('---------------------------------------')\n",
        "print('To find all the Square of all values in a series')\n",
        "print(s**2)\n",
        "print('To print all the values in a series that are greater than 2')\n",
        "print('---------------------------------------')\n",
        "print(s[s>2])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6kt31gLVISw1",
        "outputId": "0bcba3c6-aef9-46c4-a129-e0eb6ac83384"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "To Multiply all values in a series by 2\n",
            "---------------------------------------\n",
            "To find all the Square of all values in a series\n",
            "0     1\n",
            "1     4\n",
            "2     9\n",
            "3    16\n",
            "4    25\n",
            "dtype: int64\n",
            "To print all the values in a series that are greater than 2\n",
            "---------------------------------------\n",
            "2    3\n",
            "3    4\n",
            "4    5\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "s1=pd.Series([1,2,3,4,5],index=['a','b','c','d','e'])\n",
        "s2=pd.Series([10,20,30,40,50],index=['a','b','c','d','e'])\n",
        "s3=pd.Series([5,14,23,32],index=['a','b','c','d'])\n",
        "print('To Add Series1&series2')\n",
        "print('-')\n",
        "print(s1+s2)\n",
        "print('To Add Series2&Series3')\n",
        "print('..-')\n",
        "print(s2+s3)\n",
        "print('To Add Series2&series3 and Filled Non Matching Index withe')\n",
        "print('.. --------')\n",
        "print(s2.add(s3,fill_value=0))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GXB3XagRL4UP",
        "outputId": "2399fa75-fece-43ba-eb2d-a8fb52cefa37"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "To Add Series1&series2\n",
            "-\n",
            "a    11\n",
            "b    22\n",
            "c    33\n",
            "d    44\n",
            "e    55\n",
            "dtype: int64\n",
            "To Add Series2&Series3\n",
            "..-\n",
            "a    15.0\n",
            "b    34.0\n",
            "c    53.0\n",
            "d    72.0\n",
            "e     NaN\n",
            "dtype: float64\n",
            "To Add Series2&series3 and Filled Non Matching Index withe\n",
            ".. --------\n",
            "a    15.0\n",
            "b    34.0\n",
            "c    53.0\n",
            "d    72.0\n",
            "e    50.0\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array([10,15,18,22,55,77,42,48,97])\n",
        "#createaseries from array\n",
        "s=pd.Series(arr)\n",
        "#to print fiest5rows\n",
        "print(s.head())\n",
        "#To print first3rows\n",
        "print(s.head(3))\n",
        "                  "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NveUyQQyMad_",
        "outputId": "8812eb1a-fa52-42e5-865f-30df708f898a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "3    22\n",
            "4    55\n",
            "dtype: int64\n",
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array([10,15,18,22,55,77,42,48,97])\n",
        "#createaseries from array\n",
        "s=pd.Series(arr)\n",
        "#to print Last5rows\n",
        "print(s.tail())\n",
        "#To print Last4rows\n",
        "print(s.tail(4))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uW1cGGnUMgq-",
        "outputId": "3f71aab0-5735-46d0-9713-68a51652b309"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4    55\n",
            "5    77\n",
            "6    42\n",
            "7    48\n",
            "8    97\n",
            "dtype: int64\n",
            "5    77\n",
            "6    42\n",
            "7    48\n",
            "8    97\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array([10,15,18,22,55,77])\n",
        "s=pd.Series(arr)\n",
        "print(s)\n",
        "print(s.loc[:2])\n",
        "print(s.loc[3:4])\n",
        "s.loc[2:3]\n",
        "                            "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4clrT6LXMn2_",
        "outputId": "0d1a7c10-1525-454f-e1fc-1901e37eea39"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "3    22\n",
            "4    55\n",
            "5    77\n",
            "dtype: int64\n",
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "dtype: int64\n",
            "3    22\n",
            "4    55\n",
            "dtype: int64\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2    18\n",
              "3    22\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array([10,15,18,22,55,77])\n",
        "s=pd.Series(arr)\n",
        "print(s)\n",
        "print(s[1])\n",
        "print('\\n')\n",
        "print(s[3:4])\n",
        "s[:3]\n",
        "                               "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dSOKQKf8M5Jf",
        "outputId": "67e12d28-a6a1-41d6-f801-c3fdb62c851a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    10\n",
            "1    15\n",
            "2    18\n",
            "3    22\n",
            "4    55\n",
            "5    77\n",
            "dtype: int64\n",
            "15\n",
            "\n",
            "\n",
            "3    22\n",
            "dtype: int64\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    10\n",
              "1    15\n",
              "2    18\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array(['a','b','c','d'],)\n",
        "s=pd.Series(arr,index=['first','second','third','fourth'])\n",
        "print(s)\n",
        "print('\\n indexes in Series are :::')\n",
        "print(s.index)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Knle8BUpOU7q",
        "outputId": "71806644-984a-4980-bd0c-8bcd921bbb45"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "first     a\n",
            "second    b\n",
            "third     c\n",
            "fourth    d\n",
            "dtype: object\n",
            "\n",
            " indexes in Series are :::\n",
            "Index(['first', 'second', 'third', 'fourth'], dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "arr=np.array([10,15,18,22,55,77])\n",
        "pd.Series(arr,index=['A','B','C','D','E','F'])\n",
        "print(s)\n",
        "print(s[1:5:2])\n",
        "print(s[0:6:2])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BsB0MwO6PcDi",
        "outputId": "232a2ef0-1c74-4b64-90a5-fc6b066a7e2d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "first     a\n",
            "second    b\n",
            "third     c\n",
            "fourth    d\n",
            "dtype: object\n",
            "second    b\n",
            "fourth    d\n",
            "dtype: object\n",
            "first    a\n",
            "third    c\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df=pd.DataFrame()\n",
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jF2MVh6qPiMZ",
        "outputId": "98cf5cf3-a222-4987-f3cd-6ca10d34e1d1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Empty DataFrame\n",
            "Columns: []\n",
            "Index: []\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "s=pd.Series(['a','b','c','d'])\n",
        "df=pd.DataFrame(s)\n",
        "print(df)"
      ],
      "metadata": {
        "id": "rHSa8LfLHybN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b8916f6d-5bd8-4e9b-ecfc-f73043d23ba8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   0\n",
            "0  a\n",
            "1  b\n",
            "2  c\n",
            "3  d\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "name=pd.Series(['Hardik','Virat'])\n",
        "team=pd.Series(['MI','RCB'])\n",
        "dic={'Name':name,'Team':team}\n",
        "df=pd.DataFrame(dic)\n",
        "print(df)\n",
        "              "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EiwZYTt_PzRo",
        "outputId": "d87bcaf0-5072-48a9-ad54-01defe1aa2c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Name Team\n",
            "0  Hardik   MI\n",
            "1   Virat  RCB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "l =  [{'Name':'Sachin','SirName':'Tendulkar'},\n",
        "     {'Name':'Virat','SirName':'kohli'},\n",
        "     {'Name':'Rohit','SirName':'Sharma'}]\n",
        "dfl=pd.DataFrame(l)\n",
        "print(dfl)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cl7VZAi-Te3p",
        "outputId": "d78e4076-8d88-4921-ced6-354c76654ef9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Name    SirName\n",
            "0  Sachin  Tendulkar\n",
            "1   Virat      kohli\n",
            "2   Rohit     Sharma\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "l= [{'Name':'Sachin','SirName':'Bhardwaj'},\n",
        "    {'Name':'Vinod','SirName':'Verma'}]\n",
        "dfl=pd.DataFrame(l)\n",
        "print(dfl)\n",
        "for(row_index,row_value)in dfl.iterrows():\n",
        "    print('\\nRow index is ::',row_index)\n",
        "    print('Row Value is::')\n",
        "    print(row_value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LTZ6uRGnUOUU",
        "outputId": "29a0599f-9cbe-4c6e-ad47-9dfe2722b63d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Name   SirName\n",
            "0  Sachin  Bhardwaj\n",
            "1   Vinod     Verma\n",
            "\n",
            "Row index is :: 0\n",
            "Row Value is::\n",
            "Name         Sachin\n",
            "SirName    Bhardwaj\n",
            "Name: 0, dtype: object\n",
            "\n",
            "Row index is :: 1\n",
            "Row Value is::\n",
            "Name       Vinod\n",
            "SirName    Verma\n",
            "Name: 1, dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "l= [{'Name':'Sachin','SirName':'Bhardwaj'},\n",
        "    {'Name':'Vinod','SirName':'Verma'}]\n",
        "dfl=pd.DataFrame(l)\n",
        "print(dfl)\n",
        "for(col_name,col_value)in dfl.iteritems():\n",
        "    print('\\n')\n",
        "    print('Column Name is ::',col_name)\n",
        "    print('Column Values are ::')\n",
        "    print(col_value)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WooqIXcUUlYO",
        "outputId": "fffa70d2-699a-43f6-a825-af7577acd3e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Name   SirName\n",
            "0  Sachin  Bhardwaj\n",
            "1   Vinod     Verma\n",
            "\n",
            "\n",
            "Column Name is :: Name\n",
            "Column Values are ::\n",
            "0    Sachin\n",
            "1     Vinod\n",
            "Name: Name, dtype: object\n",
            "\n",
            "\n",
            "Column Name is :: SirName\n",
            "Column Values are ::\n",
            "0    Bhardwaj\n",
            "1       Verma\n",
            "Name: SirName, dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "empdata= {'empid':[101,102,103,104,105,106],\n",
        "          'ename':['Sachin','Vinod','Lakhbir','Anil','Devinder','UmaSelvi'],\n",
        "          'Doj':['12 -01-2012','15 -01-2012','05 -09-2007','17 -01- 2012','05 -09-2007','16 -01-2012'] }\n",
        "df=pd.DataFrame(empdata)\n",
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a0MTuKrOUw-0",
        "outputId": "05d76c43-95f6-4350-ca53-02875b6d667d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   empid     ename           Doj\n",
            "0    101    Sachin   12 -01-2012\n",
            "1    102     Vinod   15 -01-2012\n",
            "2    103   Lakhbir   05 -09-2007\n",
            "3    104      Anil  17 -01- 2012\n",
            "4    105  Devinder   05 -09-2007\n",
            "5    106  UmaSelvi   16 -01-2012\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "s=pd.Series([10,20,30,40])\n",
        "df=pd.DataFrame(s)\n",
        "df.columns=['List1']\n",
        "df['List2']=40\n",
        "df1=df.drop('List2',axis=1)\n",
        "df2=df.drop(index=[2,3],axis=0)\n",
        "print(df)\n",
        "print(\"After deletion::\")\n",
        "print(df1)\n",
        "print(\"After row deletion::\")\n",
        "print(df2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QsdEo3gvVSFf",
        "outputId": "df2450e8-a372-4fe1-919c-078ea2c28cb4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   List1  List2\n",
            "0     10     40\n",
            "1     20     40\n",
            "2     30     40\n",
            "3     40     40\n",
            "After deletion::\n",
            "   List1\n",
            "0     10\n",
            "1     20\n",
            "2     30\n",
            "3     40\n",
            "After row deletion::\n",
            "   List1  List2\n",
            "0     10     40\n",
            "1     20     40\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "Runs = { 'TCS': {'Qtr1':2500,'Qtr2':2000,'Qtr3':3000,'Qtr4':2000},\n",
        "        'WIPRO':{'Qtr1':2800,'Qtr2':2400,'Qtr3':3600,'Qtr4':2400},\n",
        "        'L&T':{'Qtr1':2100,'Qtr2':5700,'Qtr3':35000,'Qtr4':2100} }\n",
        "df=pd.DataFrame(Runs)\n",
        "print(df)\n",
        "print(df.loc['Qtr3',])\n",
        "print(df.loc['Qtr1':'Qtr3',:])\n",
        "                                 "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8AyY6pvcWRTJ",
        "outputId": "da9bbe5f-7b63-4a51-96ae-584c8456d8fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       TCS  WIPRO    L&T\n",
            "Qtr1  2500   2800   2100\n",
            "Qtr2  2000   2400   5700\n",
            "Qtr3  3000   3600  35000\n",
            "Qtr4  2000   2400   2100\n",
            "TCS       3000\n",
            "WIPRO     3600\n",
            "L&T      35000\n",
            "Name: Qtr3, dtype: int64\n",
            "       TCS  WIPRO    L&T\n",
            "Qtr1  2500   2800   2100\n",
            "Qtr2  2000   2400   5700\n",
            "Qtr3  3000   3600  35000\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "                                "
      ],
      "metadata": {
        "id": "0n2QB9eaXgIK"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
